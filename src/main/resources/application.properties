quarkus.application.name=hibernate-github-bot

quarkus.management.enabled=true
quarkus.info.enabled=true

quarkus.qute.suffixes=md
quarkus.qute.content-types."md"=text/markdown

quarkus.cache.caffeine."glob-cache".maximum-size=200

hibernate-github-bot.jenkins.github-app-id=347853
hibernate-github-bot.develocity.uri=https://ge.hibernate.org/

quarkus.openapi-generator.codegen.spec.gradle_enterprise_2023_4_api_yaml.config-key=develocity
quarkus.openapi-generator.codegen.spec.gradle_enterprise_2023_4_api_yaml.base-package=com.gradle.develocity
quarkus.rest-client.develocity.uri=${hibernate-github-bot.develocity.uri}
quarkus.openapi-generator.gradle_enterprise_2023_4_api_yaml.auth.DevelocityAccessKey.bearer-token=${hibernate-github-bot.develocity.access-key}

%dev.quarkus.rest-client.logging.scope=request-response
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
#%dev.quarkus.log.category."io.quarkus.arc".level=DEBUG

%dev,test.hibernate-github-bot.dry-run=false
%dev,test.hibernate-github-bot.develocity.access-key=foo

##############
# Deployment configuration:
#
quarkus.container-image.builder=jib
quarkus.openshift.part-of=hibernate-github-bot
# Renew the SSL certificate automatically
# This requires an additional controller to run on the OpenShift cluster (in our case it does).
# See https://github.com/tnozicka/openshift-acme/#enabling-acme-certificates-for-your-object
quarkus.openshift.annotations."kubernetes.io/tls-acme"=true
quarkus.openshift.env.configmaps=hibernate-github-bot-config
quarkus.openshift.env.secrets=hibernate-github-bot-secrets
# Resource requirements
quarkus.openshift.resources.limits.cpu=600m
quarkus.openshift.resources.requests.cpu=400m
quarkus.openshift.resources.limits.memory=300Mi
quarkus.openshift.resources.requests.memory=150Mi
# Add routes:
quarkus.openshift.route.expose=true
quarkus.openshift.route.target-port=http
## Route TLS configuration:
quarkus.openshift.route.tls.termination=edge
quarkus.openshift.route.tls.insecure-edge-termination-policy=Redirect
# Don't use the version in (service) selectors,
# otherwise a rollback to an earlier version (due to failing startup) makes the service unavailable
quarkus.openshift.add-version-to-label-selectors=false
quarkus.helm.values."resources.limits.cpu".paths=(kind == Deployment).spec.template.spec.containers.resources.limits.cpu
quarkus.helm.values."resources.requests.cpu".paths=(kind == Deployment).spec.template.spec.containers.resources.requests.cpu
quarkus.helm.values."resources.limits.memory".paths=(kind == Deployment).spec.template.spec.containers.resources.limits.memory
quarkus.helm.values."resources.requests.memory".paths=(kind == Deployment).spec.template.spec.containers.resources.requests.memory
#
# General Helm config
#
# Don't just add any random system property mentioned in application.properties to values.yaml...
# We don't need it but more importantly it doesn't work (leads to marshalling errors)
# for strings that look like numbers (e.g. 2.11)
quarkus.helm.map-system-properties=false
# Set common k8s labels everywhere:
quarkus.helm.values."version".paths=metadata.labels.'app.kubernetes.io/version',spec.template.metadata.labels.'app.kubernetes.io/version'
quarkus.helm.values."version".property=@.app.version
quarkus.helm.values."version".value=${maven.revision}
quarkus.helm.values."part-of".paths=metadata.labels.'app.kubernetes.io/part-of',spec.template.metadata.labels.'app.kubernetes.io/part-of'
quarkus.helm.values."part-of".property=@.app.name
quarkus.helm.values."part-of".value=hibernate-github-bot
